ADOS — Замена Download Master
 
В соответствии с своим обещанием, выкладываю скрипт, который, надеюсь, станет полноценной заменой Download Master, как известно, не работающего на прошивках Олега.

Вот некоторые возможности моего скрипта:

    Обработка неограниченного количества ссылок на файлы (в том числе поиск ссылок в тексте).
    Многопользовательский режим работы с поддержкой учетных записей администраторов и обычных пользователей.
    Запуск закачек по расписанию. Как вариант — принудительная привязка закачек к расписанию, чтобы, например, закачки производились только ночью.
    Поддержка различных БД: как встроенной в PHP SQLite, так и популярной MySQL.
    Поддержка различных программ-качалок (cURL, wget и др.). Для каждой закачки можно использовать свою программу.
    Поддержка пользовательских каталогов. Каждый файл можно сохранять в определенную директорию в зависимости от его расширения или желания пользователя.
    Поддержка аутентификации и переадресации. Полезная вещь для скачивания с FTP или при использовании платных аккаунтов.
    Ограничение общей скорости закачек для каждого из пользователей.
    Обновление состояния закачек в режиме реального времени.
    Поддержка различных языков.


Описание и инструкции: части первая и вторая.
Подготовка, установка и настройка: советы и рекомендации.

---------------
Текущая версия: 1.3.9 (сборка 74)

Ссылка на скачивание: http://download.dini.su/ados/stable (511 Кб)
md5: c301c8dabae7c7efee29f71cd146ba8c
Код обновления: jmcGL7BYBWoGwNpOwQle/gF+V7XDuoKk5YU=
Последнее обновление: 7 сентября 2008 года 21:20 мск

---------------
Внимание!

К сожалению, я больше не могу осуществлять техническую поддержку своего скрипта.
Возможно, ее будут осуществлять другие люди, если они захотят это делать. Поэтому, пожалуйста, проявляйте терпение, если у вас возникнут вопросы или проблемы, и относитесь с уважением к тем людям, которые захотят вам помочь. Спасибо.

Также вынужден сообщить, что дальнейшее развитие проекта моими силами маловероятно. По этой причине последняя версия скрипта распространяется по лицензии GPL v3 (неофициальный перевод). Если у кого-либо возникнет желание и появится возможность развивать мой проект, то теперь никаких правовых проблем возникать не должно.
Спасибо всем пользователям моего скрипта и спасибо всем за теплые отзывы о моей работе!

На личные сообщения я отвечать, скорее всего не буду, т.к. я здесь буду появляться редко и просто не буду знать о появлении новых сообщений. Тем не менее, по вопросам, связанным со скриптом (однако не связанным с его технической поддержкой), вы можете обращаться по электронному адресу: ados [собака] dini [точка] su (этот ящик я стараюсь просматривать пару раз в неделю, поэтому быстрого ответа тоже не ждите).

---------------
FAQ

В: Все установил(а) как надо, но ничего не работает.
О: Может быть, дело в кодировке?

В: Постоянно выводится страница авторизации, даже если логин и пароль указаны верно.
О: Удалите все cookies, установленные системой, и переустановите ее. Во время установки поля "Домен, используемый в cookie" и "Путь, используемый в cookie" оставьте пустыми.

В: Файл вечно находится в состоянии "Закачивается".
О: Проверьте наличие ошибок при выполнении заданий cron.

В: Будут ли поддерживаться торренты?
О: Скорее всего, не будут. Ведь уже есть программы, имеющие и WebUI, и даже GUI для Windows. Например, rTorrent.

Если у вас проблема со скачиванием файла по определенной ссылке, то эту ссылку отправляем мне в личку, а не пишем ее в теме!

При описании проблемы указывайте:

    версию скрипта
    название и версию модуля закачки, который вы используете
    номер ошибки (смотрите в журнале)
    название и версию вашего браузера
    наиболее полное и подробное описание ситуации, при которой возникает ошибка


---------------
ОБЯЗАТЕЛЬНОЕ ДЕЙСТВИЕ:
Для того, чтобы не получать при установке такую ошибку:
Code:
Fatal error: This system requires PHP 5.1.3 or over. Your PHP version is
Необходимо проделать следующее:
Code:
В файле /opt/share/www/ados/install/index.php в строке 141 меняем "<" на ">"

т.е. if( strcmp( $phpver[1], "5.1.3" ) < 0 )

меняем на

if( strcmp( $phpver[1], "5.1.3" ) > 0 )
---------------
=====================================================================================
=====================================================================================
=====================================================================================
Описание и инструкции
Полноценного мануала пока нет, но краткие инструкции, пояснения и советы есть ниже.

Системные требования (для версий 1.3.x):

    Сервер, поддерживающий POST-формы и cookie. Я использую lighttpd.
    PHP 5.1.3 и выше
    CRON и crontab.
    SQLite 2.x (имеется встроенная поддержка в PHP), SQLite 3.x (см. примечание здесь) или MySQL 4.x и выше (устанавливается отдельно).
    Программа-качалка. По умолчанию скриптом поддерживаются cURL (рекомендуется), wget и axel.
    Желающие могут написать модули для других качалок (инструкции находятся в файле HOWTO_MAKE_MODULE директории docs установочного архива).
    Библиотека GD для вывода графического прогресса закачки (опционально).
    Библиотека mbstring для обработки нелатинских символов в ссылках (опционально).
    Браузер, поддерживающий JavaScript. Скрипт разрабатывался под Firefox 2.0 и выше, большая часть функций тестировалась и будет работать в IE 6.0 и выше, Opera 9.0 и выше, Safari 3.0.4 и выше. Не тестировалось, но, скорее всего, будет работать в Firefox 1.х, IE 5.х и Opera 8.х.


Установка:

    Убедитесь в правильности установки и настройки перечисленных выше пакетов. Подробнее см. здесь
    Извлеките файлы из архива и скопируйте их в директорию на жестком диске, куда вы хотели бы произвести установку.
    Откройте индексный файл этой директории, набрав соответствующий адрес в браузере. Например, если сервер работает на порте 8080, а файлы находятся в корневой директории хоста, то адрес будет http://my.router:8080.
    Следуйте инструкциям программы установки.

Замечание: Каталог для сохранения файлов лучше указать отдельный. Например, создать директорию /opt/ados и указать этот путь. Туда и будут сохраняться скачиваемые файлы в различные подкаталоги в зависимости от пользователя, инициализировавшего закачку, и категории, выбранной им для сохранения.
Например, если я выберу для сохранения категорию video, то файл сохранится в директорию /opt/ados/dini/video.
Поэтому в настройках FTP можно смело расставлять пользователям локалки в качестве корневых директорий их поддиректории, чтобы быть уверенным, что они не получат доступ к чужим файлам.
Также будут созданы три стандартные поддиректории:
_tmp — для хранения временных файлов во время закачки
_log — для хранения логов выполнения CRON заданий и логов, записываемых модулем, выполняющим закачки. При успешной закачке лог стирается, т.к. он занимает достаточно много места.
_all — для сохранения общих файлов.

Настройка:
Сразу после окончания установки и входа в систему откройте вкладку "Настройки" и внимательно ознакомьтесь со списком всех настроек. При необходимости поменяйте их на нужные вам.

Замечание 1: SQLite 2.x, к сожалению, плохо поддерживает юникод, поэтому нелатинские символы записать в нее нельзя. Однако, можно закодировать строку в base64 и в базу записать ее. Именно это будет происходить, если включить проверку наличия нелатинских символов в настройках. Однако данные, закодированные в base64, занимают на 33% больше места, чем оригинал, а на кодирование и последующее раскодирование тратятся системные ресурсы (правда, незначительные, но все же). Поэтому если для вас критично, например, давать описания файлам на русском, то можете включить эту опцию.
Если используется БД SQLite 3.x или MySQL, опция будет недоступна, т.к эти базы данных имеют полноценную поддержку юникода.

Замечание 2: В журнал пока сохраняются только записи, относящиеся к классу управления файлами и закачками, классу управления CRON заданий и частично к самой вкладке журнала. Другие записи я пока просто не успел сделать.
Поэтому включать ведение журнала нужно только в том случае, если у вас возникают проблемы со скачиванием файлов.

Замечание 3: Не стоит устанавливать слишком большое количество одновременных закачек. Все работает нормально, но, например, axel создает много процессов, если установить для него закачку в несколько потоков; поэтому при большом количестве закачек создается большое количество процессов, что грузит систему и может привести к нехватке памяти. В этом случае поможет включение swap.
Тем не менее, у меня прекрасный результат дает комбинация 10 потоков для axel'а и 3 одновременных закачки.

Замечание 4: Я уже говорил, что чем больше список файлов, тем больше запросов идет в БД и тем дольше становится выполнение скрипта.
Особенно это заметно, если идет скачивание, т.к. в этом случае скрипт для всех скачиваемых файлов читает лог скачки для вывода текущего состояния: времени, процентов и т.д.
Поэтому советую обойтись без автоматического обновления информации или выставить его не чаще, чем раз в 30 секунд, если не хотите сами нажимать кнопку "Обновить".

Замечание 5: К сожалению, не хватило времени проверить работу скрипта для обычных пользователей. Для админов, понятно, почти нет ограничений, поэтому все работает. А вот при включенных ограничениях для пользователей учет этих ограничений, повторю, проверить не успел.
Поэтому не надо удивляться, если установленные в настройках ограничения для обычных пользователей работать не будут. Хотя должны
Описание и инструкции (продолжение)
Авторизация посредством логина-пароля:
Если у вас есть аккаунты на платных файловых серверах типа RapidShare или FileFactory или если требуется авторизация на FTP серверах, то вы можете добавить список параметров авторизации в настройках.
Домен — это шаблон адресов, для которых требуется авторизация. Пример: httр://*.rapidsahre.com. Авторизация будет производиться на всех поддоменах домена rapidshare.com.
Другой пример: httр://rs200.rapidsahre.*. Авторизация будет производиться только на поддомене rs200, но независимо от доменной зоны (de, ru, com.ua).
Если хотите расшарить параметры авторизации для всех пользователей, то поставьте флажок в колонке "Общее".

Закачка:

    Откройте вкладку "Закачки".
    Нажмите кнопку "Добавить ссылки" (крайняя левая над списком файлов).
    Введите одну или несколько ссылок, которые надо скачать. Можно просто вставить текст, содержащий нужные ссылки. Одно условие: ссылки должны отделяться друг от друга хотя бы одним пробелом, табом или переводом строки.
    Если ссылка содержит пробелы или если необходимо задать ссылку явно, то ее необходимо заключить в тэг [url]...[ /url] (закрывающий тэг указывается без пробела).
    Если для ссылки необходимо задать описание прямо при добавлении, то это можно сделать, заключив текст описания сразу после ссылки в тэг [desc]...[/desc].
    Если ссылка одна, то см. следующий пункт.
    Если ссылок много, то будет предложено уточнить их адреса и выбрать те из них, которые следует закачивать. Здесь же можно в более удобном виде добавить описание для каждой из ссылок, нажав на соответствующую кнопку справа от ссылки. Описания, введенные во время предыдущего шага, уже будут отображены.
    Установите необходимые параметры:
    - укажите имя файла, под которым он будет сохранен;
    - выберите категорию, куда он будет сохранен;
    - уточните, если необходимо, путь для сохранения;
    - введите описание (если еще не сделали это раньше, но такое желание все-таки появилось);
    - выберите модуль, который будет производить закачку (рекомендуется cURL);
    - сделайте привязку (если необходимо) к одному из ранее созданных, но еще не выполненных событий расписания.
    Если добавлялась одна ссылка, то можно сразу же начать закачку, нажав на соответствующую кнопку, или нажать на кнопку "Применить настройки" внизу формы для сохранения введенных параметров.
    Если добавлялось много ссылок, то можно применить указанные параметры (категорию, путь для сохранения, модуль и привязку к расписанию) для всех введенных ранее ссылок. При этом имя файла для каждой ссылки будет получаться от сервера, с которого будет происходить закачка, а описание будет применяться то, что было указано на предыдущих шагах (если оно было дано).


Управление закачками:
Под управлением подразумевается изменения текущего состояния закачки на одно из следующих:
- закачка (выполнение)
- пауза (отмена закачки с сохранением закачанной информации и возможностью последующей докачки, если такая возможность поддерживается модулем)
- остановка (отмена закачки и удаление закачанной информации)
- удаление (остановка + удаление информации о закачки из БД)

    Выделите те закачки, которыми вы хотите управлять (просто щелкайте по строкам в списке; для выделения нескольких строк подряд зажмите Ctrl, щелкните на первой строке и ведите курсор вниз, чтобы выделить нижеследующие строки).
    Если выделена одна закачка, то можно нажать кнопку "Свойства закачки" и выполнять управления из открывшегося окна.
    Если выделено несколько закачек, то для управления ими используйте первый блок кнопок управления (значки на фоне одного листа бумаги).
    Для управления сразу всем списком используйте второй блок кнопок (значки на фоне двух листов бумаги).


Замечание: на изменение состояния может потребоваться время. В зависимости от объема списка файлов (см. выше).

В основном, это все.
С расписанием, категориями, управлением пользователями и модулями, постарайтесь, пожалуйста, разобраться сами. У меня уже нет времени это расписывать. В крайнем случае оставьте все как есть и дождитесь мануала.

Пользователям Internet Explorer 6 (и более ранних версий):
Браузером некорректно обрабатываются PNG файлы, имеющие альфа-канал (прозрачные участки). Именно такие изображения используются в скрипте.
Тем не менее, в скрипте применяется специальный алгоритм, позволяющий подкорректировать обработку альфа-канала. Минусом алгоритма является то, что коррекция производится в режиме реального времени после каждой загрузки (обновления) страницы. И чем больше элементов требуется обработать, тем больше времени это займет.

Для отключения обработки альфа-канала откройте в любом текстовом редакторе, поддерживающим кодировку UTF-8, файл index.php в корневом каталоге скрипта и найдите строку
Code:

define( 'PARSE_PNG'		, TRUE );

Замените слово "TRUE" на "FALSE" (без кавычек) и сохраните файл.

Эпилог (в основном относится к первой бете)
Скрипт умеет качать файлы. Он может качать сразу много файлов. Он позволяет изменять состояния одной или сразу нескольких закачек. Это проверено мной и уже не раз.
Насколько хорошо он выполняет другие заложенные в него функции, я не знаю, т.к. далеко не все успел проверить.

Тем не менее, как я сказал выше, с основной задачей, возложенной мной на скрипт — скачиванием — он справляется. Увы, больше я не могу тратить так много времени, как я это делал последние полтора месяца, чтобы улучшать скрипт и налаживать и дополнять его функционал. Времени у меня вообще больше нет.

Поэтому вы можете писать сюда обо всех багах и глюках, с которыми вы столкнетесь, но я не гарантирую, что исправлю их так быстро, как вы и я этого хотели бы.
Я не знаю, когда я смогу выпустить финальную версию и буду ли я вносить изменения для оптимизации скрипта и добавления в него новых функций в будущем.

В общем, извините, если что не так.
================================================================================================
Приведенное ниже руководство по мере возможности периодически обновляется и корректируется. Reyter
Я тут приведу некоторые рекомендации по установке ADOS для начинающих пользователей. Может быть не все здесь может абсолютно правильно, но тем не менее ОНО работает.

Предварительно замечание общего характера. А именно - про те грабли, на которые наступает каждый новичок. Чтобы не иметь проблем с установкой и работой дополнительных пакетов, в обязательном порядке необходимо перейти на альтернативный репозитарий пакетов и установить uclibc-opt. Ниже приведен скрипт, который поможет "одним махом" изменить конфигурацию ipkg на предмет работы с альтернативным репозитарием, установить uclibc-opt и переустановить (без этого никак не обойтись) все ранее установленные пакеты из "неправильного" репозитария (конфиги и настройки этих пакетов, если таковые были, при этом сохранятся).
Code:

echo "src unslung http://ipkg.nslu2-linux.org/feeds/optware/oleg/cross/stable" > /opt/etc/ipkg.conf
echo "dest root /" >> /opt/etc/ipkg.conf
ipkg update && ipkg install uclibc-opt && awk '/^Package:/{system("ipkg install -force-reinstall -force-defaults " $2)}' /opt/lib/ipkg/status

Если у Вас все уже было установлено из альтернативного репозитария, то описанный выше шаг можно смело пропустить.

Ну а теперь займемся установкой ADOS и иже с ним.
Сначала устанавливаем cron, lighttpd, sglite, php-fcgi, php-gd, cURL, wget (если не был установлен ранее) и microperl (тоже может пригодиться):
Code:

ipkg update
ipkg install cron
ipkg install lighttpd
ipkg install php-fcgi
ipkg install sqlite
ipkg install php-gd
ipkg install libcurl
ipkg install wget
ipkg install microperl

Распаковываем содержимое дистрибутива и помещаем все в папку /opt/share/www/ados
Не забываем сначала эту самую папку создать:
mkdir /opt/share/www/ados

редактируем /opt/etc/lighttpd/lighttpd.conf
# добавляем:
dir-listing.activate = "enable"
# это чтобы можно было листать директории, не содержащие index.* и т.п. Т.е. таким образом можно будет элементарно скачивать файлы с роутера по http. Необходимо для торрента transmission.
# Раскомментируем (удаляем в начале строки #) строки:
"mod_access",
"mod_fastcgi",
"mod_cgi",
"mod_accesslog" )
# Исправляем:
server.document-root = "/opt/share/www/"
# (иначе не будет доступа в папки, отличные от "/opt/share/www/lighttpd/"
# исправляем порт доступа на тот, который нам нужен (Вы можете назначить тот порт, который пожелаете).
server.port = 8080
# раскоментируем и исправляем следующее (должен быть установлен пакет php-fcgi):
Code:

fastcgi.server             = ( ".php" =>
                               ( "localhost" =>
                                 (
                                "min-procs" => 1,
                                "max-procs" => 1,
                                "max-load-per-proc" => 4,
                                "socket" => "/tmp/php-fastcgi.socket",
                                "bin-path" => "/opt/bin/php-fcgi"
                                 )
                               )
                            )

# раскомментируем и исправляем следующее
Code:

cgi.assign                 = ( ".pl"  => "/opt/bin/microperl",
                               ".cgi" => "/opt/bin/microperl" )

# это чтобы у нас еще и *.cgi работали. Необходимо, в частности
# для того же transmission. Должен быть установлен пакет microperl
Далее редактируем (может это и лишнее, но все же...) /opt/etc/php.ini
Ищем секцию с перечислением extension (у меня это строка 539) и добавляем к ним
Code:

extension=pdo.so
extension=sqlite.so

Не забываем распаковать и скопировать Axel в /opt/bin и сделать его исполняемым:
chmod 0755 /opt/bin/axel

Редактируем /opt/etc/crontab. Он должен выглядеть следующим образом:
Code:

SHELL=/bin/sh
PATH=/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=""
HOME=/
# ---------- ---------- Default is Empty ---------- ---------- #
*/1 * * * * root /opt/bin/run-parts /opt/etc/cron.1min
*/5 * * * * root /opt/bin/run-parts /opt/etc/cron.5mins
01 * * * * root /opt/bin/run-parts /opt/etc/cron.hourly
02 4 * * * root /opt/bin/run-parts /opt/etc/cron.daily
22 4 * * 0 root /opt/bin/run-parts /opt/etc/cron.weekly
42 4 1 * * root /opt/bin/run-parts /opt/etc/cron.monthly

Внимание! Если вы заходите на роутер под логином admin (или еще каким), то замените в crontab "root" на "admin".

В папке /opt/bin создайте файл run-parts со следующим содержимым:
Code:

#!/bin/sh
#
# runparts.sh by macsat@macsat.com
# intended for use with cron
#
# based on rc.unslung by unslung guys :-)
#
if [ -z "$1" ]
then
echo "Usage : $0 "
fi

RUNDIR=$1"/*"

for i in $RUNDIR ;do

# Ignore dangling symlinks (if any).
[ ! -f "$i" ] && continue

case "$i" in
*.sh)
# Source shell script for speed.
(
trap - INT QUIT TSTP
set start
. $i
)
;;
*)
# No sh extension, so fork subprocess.
$i start
;;
esac
done

и сделайте его исполняемым: chmod +x /opt/bin/run-parts

Создайте все перечисленные здесь директории:
Code:

mkdir /opt/etc/cron.1min
mkdir /opt/etc/cron.5mins
mkdir /opt/etc/cron.hourly
mkdir /opt/etc/cron.daily
mkdir /opt/etc/cron.weekly
mkdir /opt/etc/cron.monthly

В эти директории можно будет класть скрипты с расширением *.sh, которые будут выполняться каждую минуту, каждые 5 минут и т.д. Естественно у них должен быть атрибут исполняемого файла.

Создайте дирректорию, куда будете закачивать файло. Например:
mkdir /tmp/harddisk/downloads

Перезапускаем lighttpd:
/opt/etc/init.d/S80lighttpd restart

Чтобы у вас автоматически запускались cron и lighttpd в файле post-mount должны быть (помимо всего прочего) такие строки:
Code:

#!/bin/sh
/opt/etc/init.d/S10cron
/opt/etc/init.d/S80lighttpd start

Пробуем зайти: http://my.router:8080/ados
Если все настроено верно, то начнется процес первичной инсталляции. В принципе там все понятно.
Настройки для ADOS
Путь к axel нужно указать полный, т.е. /opt/bin/axel ; корневой каталог для сохранения закачек тот, который вы создали, например /tmp/harddisk/downloads ; путь до исполняемого файла PHP /opt/bin/php-fcgi

А теперь упрощенная процедура с использованием прилагаемых файлов:
Устанавливаем пакеты и создаем необходимые каталоги:
Code:

ipkg update
ipkg update
ipkg install cron
ipkg install lighttpd
ipkg install php-fcgi
ipkg install sqlite
ipkg install php-gd
ipkg install libcurl
ipkg install wget
ipkg install microperl
mkdir /opt/share/www/ados
mkdir /tmp/harddisk/downloads
mkdir /opt/etc/cron.5mins
mkdir /opt/etc/cron.hourly
mkdir /opt/etc/cron.daily
mkdir /opt/etc/cron.weekly
mkdir /opt/etc/cron.monthly

Распаковываем содержимое дистрибутива в папку /opt/share/www/ados
Распаковываем содержимое for_ADOS.zip в папку /opt (если вы заходите на роутер под логином root, то потом положите поверх файл crontab из архива crontab_root.zip в папку /opt/etc . Если вы заходите не под admin и не под root, то самостоятельно отредактируйте crontab - замените в нем "admin" на свой логин).
Изменяем атрибуты файлов:
Code:

chmod +x /opt/bin/run-parts
chmod +x /opt/bin/axel
chmod 600 /opt/etc/crontab

Редактируем post-mount, там должны быть (помимо всего прочего) такие строки:
Code:

#!/bin/sh
/opt/etc/init.d/S10cron
/opt/etc/init.d/S80lighttpd start

Сохраняем post-mount и перегружаемся:
Code:

flashfs save && flashfs commit && flashfs enable && reboot

После перезагрузки пробуем зайти на http://my.router:8080/ados (вместо myrouter пропишите IP-адрес своего роутера). Если все выполнили правильно, то начнется процесс первичной инсталляции. Настройки для ADOS приведены чуть выше. После окончания настройки удалите (или куда-нибудь переместите) папку /opt/share/www/ados/install

